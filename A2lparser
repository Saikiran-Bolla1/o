import re

def parse_a2l_symbols(a2l_path):
    """
    Parse an A2L file and extract all symbol names and their links (addresses if present).
    Returns a dictionary: {symbol_name: {"address": address, "type": type, ...}}
    """
    symbols = {}
    with open(a2l_path, "r", encoding="utf-8", errors="ignore") as f:
        content = f.read()

    # Measurement block example:
    # /begin MEASUREMENT VarName "Description" <...> ECU_ADDRESS <address> <...> /end MEASUREMENT
    meas_pattern = re.compile(
        r'/begin\s+MEASUREMENT\s+(\S+)\s+"[^"]*".*?ECU_ADDRESS\s+(\S+).*?/end\s+MEASUREMENT',
        re.DOTALL
    )
    for match in meas_pattern.finditer(content):
        name = match.group(1)
        address = match.group(2)
        symbols[name] = {"address": address, "type": "measurement"}

    # Characteristic block example:
    # /begin CHARACTERISTIC VarName "Description" <...> ECU_ADDRESS <address> <...> /end CHARACTERISTIC
    char_pattern = re.compile(
        r'/begin\s+CHARACTERISTIC\s+(\S+)\s+"[^"]*".*?ECU_ADDRESS\s+(\S+).*?/end\s+CHARACTERISTIC',
        re.DOTALL
    )
    for match in char_pattern.finditer(content):
        name = match.group(1)
        address = match.group(2)
        symbols[name] = {"address": address, "type": "characteristic"}

    # Optional: extract other symbol types as needed

    return symbols

# Example usage:
if __name__ == "__main__":
    a2l_file = "example.a2l"
    syms = parse_a2l_symbols(a2l_file)
    for k, v in syms.items():
        print(f"{k}: {v}")
